#Использовать collectionos
#Использовать "../../../shared"

Перем _ПутьКОтчету;
Перем _РепортерСтатистика;

Перем ЯдроURI;
Перем СобытияURI;
Перем ЗаписьXML;

Перем СчетчикИдентификаторов;
Перем ИдентификаторыСобытий;

&ПодпискаНаСобытие("ИсполнениеТестПланНачало")
Процедура ИсполнениеТестПланНачало(ТестПлан) Экспорт

	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.ОткрытьФайл(_ПутьКОтчету);

	ЗаписьXML.ЗаписатьОбъявлениеXML();

	ЗаписьXML.ЗаписатьНачалоЭлемента("e:events");

	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("c", ЯдроURI);
	ЗаписьXML.ЗаписатьСоответствиеПространстваИмен("e", СобытияURI);

	ЗаписьXML.ЗаписатьНачалоЭлемента("infrastructure", ЯдроURI);

	СистемнаяИнформация = Новый СистемнаяИнформация();

	ЗаписьXML.ЗаписатьНачалоЭлемента("hostName", ЯдроURI);
	ЗаписьXML.ЗаписатьТекст(СистемнаяИнформация.ИмяКомпьютера);
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ЗаписьXML.ЗаписатьНачалоЭлемента("userName", ЯдроURI);
	ЗаписьXML.ЗаписатьТекст(СистемнаяИнформация.ПользовательОС);
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ЗаписьXML.ЗаписатьНачалоЭлемента("operatingSystem", ЯдроURI);
	ЗаписьXML.ЗаписатьТекст(СистемнаяИнформация.ТипПлатформы);
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ЗаписьXML.ЗаписатьНачалоЭлемента("cpuCores", ЯдроURI);
	ЗаписьXML.ЗаписатьТекст(СистемнаяИнформация.КоличествоПроцессоров);
	ЗаписьXML.ЗаписатьКонецЭлемента();

	ЗаписьXML.ЗаписатьКонецЭлемента(); // Infrastructure

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестПланКонец")
Процедура ИсполнениеТестПланКонец(ТестПлан) Экспорт
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНаборНачало")
Процедура ИсполнениеТестНаборНачало(ТестНабор) Экспорт
	ВывестиНачало(ТестНабор);
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНаборКонец")
Процедура ИсполнениеТестНаборКонец(ТестНабор, Результат) Экспорт
	ВывестиКонец(ТестНабор, Результат);
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНаборПропущен")
Процедура ИсполнениеТестНаборПропущен(ТестНабор, Причина) Экспорт

	ВывестиНачало(ТестНабор);

	Статистика = _РепортерСтатистика.СтатистикаНабора(ТестНабор);

	ЗаписьXML.ЗаписатьНачалоЭлемента("finished", СобытияURI);
	ЗаписьXML.ЗаписатьАтрибут("id", ИдентификаторыСобытий.Получить(ТестНабор).Получить());
	ЗаписьXML.ЗаписатьАтрибут(
		"time",
		XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаЗавершения", '00010101')) + "Z"
	);

	ЗаписьXML.ЗаписатьНачалоЭлемента("result", ЯдроURI);
	ЗаписьXML.ЗаписатьАтрибут("status", "SKIPPED");

	ЗаписьXML.ЗаписатьНачалоЭлемента("reason", ЯдроURI);
	ЗаписьXML.ЗаписатьСекциюCDATA(Причина);
	ЗаписьXML.ЗаписатьКонецЭлемента(); // reason

	ЗаписьXML.ЗаписатьКонецЭлемента(); // result

	ЗаписьXML.ЗаписатьКонецЭлемента(); // finished

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНачало")
Процедура ИсполнениеТестНачало(Тест) Экспорт
	ВывестиНачало(Тест);
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестКонец")
Процедура ИсполнениеТестКонец(Тест, Результат) Экспорт
	ВывестиКонец(Тест, Результат);
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестПропущен")
Процедура ИсполнениеТестПропущен(Тест, Причина) Экспорт

	ВывестиНачало(Тест);

	Статистика = _РепортерСтатистика.СтатистикаНабора(Тест);

	ЗаписьXML.ЗаписатьНачалоЭлемента("finished", СобытияURI);
	ЗаписьXML.ЗаписатьАтрибут("id", ИдентификаторыСобытий.Получить(Тест).Получить());
	ЗаписьXML.ЗаписатьАтрибут(
		"time",
		XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаЗавершения", '00010101')) + "Z"
	);

	ЗаписьXML.ЗаписатьНачалоЭлемента("result", ЯдроURI);
	ЗаписьXML.ЗаписатьАтрибут("status", "SKIPPED");

	ЗаписьXML.ЗаписатьНачалоЭлемента("reason", ЯдроURI);
	ЗаписьXML.ЗаписатьСекциюCDATA(Причина);
	ЗаписьXML.ЗаписатьКонецЭлемента(); // reason

	ЗаписьXML.ЗаписатьКонецЭлемента(); // result

	ЗаписьXML.ЗаписатьКонецЭлемента(); // finished

КонецПроцедуры

Процедура ВывестиНачало(Определение)

	СчетчикИдентификаторов = СчетчикИдентификаторов + 1;
	Идентификатор          = СчетчикИдентификаторов;

	ИдентификаторыСобытий.Вставить(Определение, Идентификатор);

	Если ТипЗнч(Определение) = Тип("ОпределениеТестНабора") Тогда
		Статистика = _РепортерСтатистика.СтатистикаНабора(Определение);
	Иначе
		Статистика = _РепортерСтатистика.СтатистикаТеста(Определение);
	КонецЕсли;

	ЗаписьXML.ЗаписатьНачалоЭлемента("started", СобытияURI);

	ЗаписьXML.ЗаписатьАтрибут("id",   Идентификатор);
	ЗаписьXML.ЗаписатьАтрибут("name", Определение.Имя());
	ЗаписьXML.ЗаписатьАтрибут(
		"time",
		XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаНачала", '00010101')) + "Z"
	);

	Если ТипЗнч(Определение.Родитель()) <> Тип("ТестПлан") Тогда
		ЗаписьXML.ЗаписатьАтрибут(
			"parentId",
			ИдентификаторыСобытий.Получить(Определение.Родитель()).Получить());
	КонецЕсли;

	ЗаписьXML.ЗаписатьНачалоЭлемента("metadata", ЯдроURI);

	Если Не Определение.Теги().Пусто() Тогда

		ЗаписьXML.ЗаписатьНачалоЭлемента("tags", ЯдроURI);

		Для Каждого Тег Из Определение.Теги() Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("tag", ЯдроURI);
			ЗаписьXML.ЗаписатьТекст(Тег);
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;

		ЗаписьXML.ЗаписатьКонецЭлемента(); // tags

	КонецЕсли;

	ЗаписьXML.ЗаписатьКонецЭлемента(); // metadata

	ЗаписьXML.ЗаписатьНачалоЭлемента("sources", ЯдроURI);

	ЗаписьXML.ЗаписатьНачалоЭлемента("fileSource", ЯдроURI);
	ЗаписьXML.ЗаписатьАтрибут("path", Определение.Путь());

	// Если вдруг будет возможность узнать где именно в файле тестовый метод
	Если Ложь Тогда

		ЗаписьXML.ЗаписатьНачалоЭлемента("filePosition", ЯдроURI);
		ЗаписьXML.ЗаписатьАтрибут("line",   0);
		ЗаписьXML.ЗаписатьАтрибут("column", 0);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // filePosition

	КонецЕсли;

	ЗаписьXML.ЗаписатьКонецЭлемента(); // fileSource

	// any

	ЗаписьXML.ЗаписатьКонецЭлемента(); // sources

	ЗаписьXML.ЗаписатьКонецЭлемента(); // started

КонецПроцедуры

Процедура ВывестиКонец(Определение, Результат)

	Идентификатор = ИдентификаторыСобытий.Получить(Определение)
		.Получить();

	Если ТипЗнч(Определение) = Тип("ОпределениеТестНабора") Тогда
		Статистика = _РепортерСтатистика.СтатистикаНабора(Определение);
	Иначе
		Статистика = _РепортерСтатистика.СтатистикаТеста(Определение);
	КонецЕсли;

	ЗаписьXML.ЗаписатьНачалоЭлемента("reported", СобытияURI);
	ЗаписьXML.ЗаписатьАтрибут("id", Идентификатор);
	ЗаписьXML.ЗаписатьАтрибут(
		"time",
		XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаЗавершения", '00010101')) + "Z"
	);

	ЗаписьXML.ЗаписатьНачалоЭлемента("attachments", ЯдроURI);

	Если ЗначениеЗаполнено(Результат.Вывод()) Тогда

		ЗаписьXML.ЗаписатьНачалоЭлемента("output", ЯдроURI);

		ЗаписьXML.ЗаписатьАтрибут(
			"time",
			XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаЗавершения", '00010101')) + "Z"
		);
		ЗаписьXML.ЗаписатьАтрибут("source", "stdout");

		ЗаписьXML.ЗаписатьСекциюCDATA(Результат.Вывод());

		ЗаписьXML.ЗаписатьКонецЭлемента(); // output

	КонецЕсли;

	Для каждого Причина Из Результат.Причины() Цикл

		ИнформацияОбОшибке = Причина;

		Если ЗначениеЗаполнено(Причина.Причина) Тогда
			ИнформацияОбОшибке = Причина.Причина;
		КонецЕсли;

		ЗаписьXML.ЗаписатьНачалоЭлемента("output", ЯдроURI);

		ЗаписьXML.ЗаписатьАтрибут("source", "exceptionInfo");

		ЗаписьXML.ЗаписатьАтрибут(
			"time",
			XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаЗавершения", '00010101')) + "Z"
		);
		ЗаписьXML.ЗаписатьСекциюCDATA(
			ТестированиеСлужебный.ПодробноеОписаниеОшибки("Причина", ИнформацияОбОшибке)
		);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // output

	КонецЦикла;

	ЗаписьXML.ЗаписатьКонецЭлемента(); // attachments
	ЗаписьXML.ЗаписатьКонецЭлемента(); // report

	ЗаписьXML.ЗаписатьНачалоЭлемента("finished", СобытияURI);
	ЗаписьXML.ЗаписатьАтрибут("id", Идентификатор);
	ЗаписьXML.ЗаписатьАтрибут(
		"time",
		XMLСтрока(Статистика.ПолучитьИлиУмолчание("ДатаЗавершения", '00010101')) + "Z"
	);

	ЗаписьXML.ЗаписатьНачалоЭлемента("result", ЯдроURI);

	Если Результат.Результат() = РезультатыВыполненияТестов.Ошибка
		Или Статистика.ПолучитьИлиУмолчание("ТестовОшибка", 0) > 0 Тогда
		ЗаписьXML.ЗаписатьАтрибут("status", "FAILED");
	Иначе
		ЗаписьXML.ЗаписатьАтрибут("status", "SUCCESSFUL");
	КонецЕсли;

	ЗаписьXML.ЗаписатьКонецЭлемента(); // result

	ЗаписьXML.ЗаписатьКонецЭлемента(); // finished

КонецПроцедуры

&Желудь
Процедура ПриСозданииОбъекта(&Блестяшка ПутьКОтчетуOpenTestReport, &Пластилин РепортерСтатистика)

	_ПутьКОтчету        = ПутьКОтчетуOpenTestReport;
	_РепортерСтатистика = РепортерСтатистика;

	ЯдроURI    = "https://schemas.opentest4j.org/reporting/core/0.2.0";
	СобытияURI = "https://schemas.opentest4j.org/reporting/events/0.2.0";

	СчетчикИдентификаторов = 0;
	ИдентификаторыСобытий  = Новый КартаСоответствие();

КонецПроцедуры
